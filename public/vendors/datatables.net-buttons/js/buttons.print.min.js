(function (factory) {
    if (typeof define === 'function' && define.amd) {
        define(['jquery', 'datatables.net', 'datatables.net-buttons'], function ($) {
            return factory($, window, document);
        });
    } else if (typeof exports === 'object') {
        module.exports = function ($, window, document, undefined) {
            if (!$.fn.dataTable) {
                require('datatables.net')($, window, document);
            }
            if (!$.fn.dataTable.Buttons) {
                require('datatables.net-buttons')($, window, document);
            }
            return factory($, window, document, undefined);
        };
    } else {
        factory(jQuery, window, document);
    }
})(function ($, window, document, undefined) {
    var DataTable = $.fn.dataTable;

    DataTable.ext.buttons.print = {
        className: 'buttons-print',
        text: function (dt) {
            return dt.i18n('buttons.print', 'Escala PDF');
        },
        action: function (e, dt, button, config) {
            var data = dt.buttons.exportData(config.exportOptions);

            // Captura o título do evento da tabela HTML
            var eventTitle = $('#datatable-buttons thead th').first().text().trim();

            // Calcula as larguras das colunas da tabela HTML
            var colWidths = [];
            $('#datatable-buttons thead th').each(function() {
                colWidths.push($(this)[0].getBoundingClientRect().width);
            });

            var createTable = function (data, type, title) {
                var table = '<table style="border-collapse: collapse; width: 100%; border: 1px solid black; font-size: 14px;">';

                if (title) {
                    table += '<tr><th colspan="' + data.header.length + '" style="font-size: 15px; border: 1px solid black; padding: 8px;">' + title + '</th></tr>';
                }

                if (type === 'header' && data.header) {
                    table += '<thead>';
                    table += '<tr>';

                    for (var i = 0, ien = data.header.length; i < ien; i++) {
                        var cellContent = data.header[i];
                        table += '<th style="border: 1px solid black; padding: 8px; width: ' + colWidths[i] + 'px; white-space: nowrap;">' + cellContent + '</th>';
                    }

                    table += '</tr>';
                    table += '</thead>';
                }

                if (type === 'body') {
                    table += '<tbody>';

                    for (var i = 0, ien = data.body.length; i < ien; i++) {
                        table += '<tr>';
                        for (var j = 0, jen = data.body[i].length; j < jen; j++) {
                            var cellContent = data.body[i][j];
                            table += '<td style="border: 1px solid black; padding: 8px; width: ' + colWidths[j] + 'px; white-space: nowrap;">' + cellContent + '</td>';
                        }
                        table += '</tr>';
                    }

                    table += '</tbody>';
                }

                if (type === 'footer' && data.footer) {
                    table += '<tfoot>';
                    table += '<tr>';

                    for (var i = 0, ien = data.footer.length; i < ien; i++) {
                        var cellContent = data.footer[i];
                        table += '<th style="border: 1px solid black; padding: 8px; width: ' + colWidths[i] + 'px; white-space: nowrap;">' + cellContent + '</th>';
                    }

                    table += '</tr>';
                    table += '</tfoot>';
                }

                table += '</table>';
                return table;
            };

            var title = config.title;
            if (typeof title === 'function') {
                title = title(dt);
            }
            if (title.indexOf('*') !== -1) {
                title = title.replace('*', $('title').text());
            }

            var popup = window.open('', '');
            popup.document.close();

            var fixedText = '<h2 style="color: #333; font-family: Arial, sans-serif;">Escala de Serviço</h2>';

            var headContent = '<title>' + title + '</title>';
            $('style, link').each(function () {
                var node = this.cloneNode(true);
                if (node.nodeName.toLowerCase() === 'link') {
                    var href = new URL(node.href);
                    if (href.host.indexOf('/') === -1 && href.pathname.indexOf('/') !== 0) {
                        href.host += '/';
                    }
                    headContent += node.outerHTML;
                }
            });

            try {
                popup.document.head.innerHTML = headContent;
            } catch (err) {
                $(popup.document.head).html(headContent);
            }

            var bodyContent = '<h1>' + title + '</h1><p>' + fixedText + '</p>' + createTable(data, 'header', eventTitle) + createTable(data, 'body');
            popup.document.body.innerHTML = bodyContent;

            var watermarkImageUrl = '/images/logo/pmpe_logo.png';
            var watermarkStyle = 'position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: -1000; opacity: 0.1; pointer-events: none;';

            var watermarkElement = popup.document.createElement('img');
            watermarkElement.setAttribute('src', watermarkImageUrl);
            watermarkElement.setAttribute('style', watermarkStyle);
            popup.document.body.appendChild(watermarkElement);

            if (config.customize) {
                config.customize(popup);
            }

            setTimeout(function () {
                if (config.autoPrint) {
                    popup.print();
                    popup.close();
                }
            }, 250);

            function getTextWidth(text) {
                var canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement("canvas"));
                var context = canvas.getContext("2d");
                context.font = "14px Arial";
                var metrics = context.measureText(text);
                return metrics.width + 16;
            }
        },

        title: '*',
        message: '',
        exportOptions: {},
        header: true,
        footer: false,
        autoPrint: true,
        customize: null
    };

    return DataTable.Buttons;
});
